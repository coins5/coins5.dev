---
import BaseLayout from "@/layouts/BaseLayout.astro";
import dayjs from "dayjs";

import relativeTime from "dayjs/plugin/relativeTime";
import type { BlogSchema } from "@/schemas/blog";
import type { SerieSchema } from "@/schemas/serie";
import NextPost from "@/components/NextPost.astro";
import { getEntry } from "astro:content";
import ImageRenderer from "@/components/ImageRenderer.astro";
import { getCollection } from "astro:content";
import SerieCard from "@/components/SerieCard.astro";
import type { CollectionEntry } from "astro:content";
dayjs.extend(relativeTime);

const { entry } = Astro.props;
const { data } = entry;
const post = data as BlogSchema;

const dayDate = dayjs(post.pubDate);

const nextPost = post.nextPost
  ? await getEntry("blog", post.nextPost.id)
  : null;

// let postSeries: BlogSchema[] = [];
let postSeries: CollectionEntry<"blog">[] = [];
let serie: SerieSchema | null = null;
let attachments: CollectionEntry<"attachment">[] = [];

if (post.serie) {
  postSeries = (await getCollection("blog"))
    // .map((b) => b.data)
    .filter((b) => b.data.serie?.id === post.serie?.id)
    .sort((a, b) => a.data.seriesPartNumber! - b.data.seriesPartNumber!);

  serie = (await getEntry("serie", post.serie.id))!.data;
  const attachmentsIds = serie?.attachments.map((a) => a.id);

  attachments = (await getCollection("attachment")).filter((a) =>
    attachmentsIds.includes(a.id)
  );
}

const author = await getEntry("author", post.author.id);
---

<BaseLayout pageTitle={post.title} blogPostSeo={post}>
  <div class="prose">
    <div class="flex justify-center"></div>
    <div class="w-full">
      <ImageRenderer
        imagePath={post.image.url}
        imageAlt={post.image.alt}
        small={false}
      />
    </div>

    <h1>
      {post.title}
    </h1>
    <p>
      Written by: {author!.data.name}
      <br />
      <span class="text-sm">
        Posted on {dayDate.format("DD MMM YYYY")} - {dayDate.fromNow()}
      </span>

      <br />
      {
        post.tags.map((tag: string) => (
          <a
            class="badge badge-soft badge-primary no-underline mr-2"
            href={`/tags/${tag}`}
          >
            {tag}
          </a>
        ))
      }
    </p>

    <p><em>{post.description}</em></p>

    <br />

    {
      serie ? (
        <SerieCard
          serie={serie}
          postSeries={postSeries}
          currentPost={post.title}
          attachments={attachments}
        />
      ) : null
    }

    <slot />

    {nextPost ? <NextPost post={nextPost} /> : null}
  </div>

  <script is:inline src="/src/scripts/copy-code.ts"></script>
  <script>
    import { enableImageZoom } from "@/scripts/zoom.ts";
    enableImageZoom();
  </script>

  <script
    data-name="BMC-Widget"
    data-cfasync="false"
    src="https://cdnjs.buymeacoffee.com/1.0.0/widget.prod.min.js"
    data-id="coins5"
    data-description="Support me on Buy me a coffee!"
    data-message="Every coffee helps me create more valuable content ❤️"
    data-color="#FF813F"
    data-position="Right"
    data-x_margin="18"
    data-y_margin="18"></script>
</BaseLayout>
