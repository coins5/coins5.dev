---
import BaseLayout from "@/layouts/BaseLayout.astro";
import dayjs from "dayjs";

import relativeTime from "dayjs/plugin/relativeTime";
import type { BlogSchema } from "@/schemas/blog";
import NextPost from "@/components/NextPost.astro";
import { getEntry } from "astro:content";
import ImageRenderer from "@/components/ImageRenderer.astro";

dayjs.extend(relativeTime);

const { entry } = Astro.props;
const { data } = entry;
const post = data as BlogSchema;

const dayDate = dayjs(post.pubDate);

const nextPost = post.nextPost
  ? await getEntry("blog", post.nextPost.id)
  : null;

const author = await getEntry("author", post.author.id);
---

<BaseLayout pageTitle={post.title} blogPostSeo={post}>
  <div class="prose">
    <div class="flex justify-center"></div>
    <div class="w-full">
      <ImageRenderer
        imagePath={post.image.url}
        imageAlt={post.image.alt}
        small={false}
      />
    </div>

    {
      post.serie ? (
        <div>Tiene serie {post.serie} </div>
      ) : (
        <div>No tiene serie</div>
      )
    }

    <h1>
      {post.title}
    </h1>
    <p>
      Written by: {author!.data.name}
      <br />
      <span class="text-sm">
        Posted on {dayDate.format("DD MMM YYYY")} - {dayDate.fromNow()}
      </span>

      <br />
      {
        post.tags.map((tag: string) => (
          <a
            class="badge badge-soft badge-primary no-underline mr-2"
            href={`/tags/${tag}`}
          >
            {tag}
          </a>
        ))
      }
    </p>

    <p><em>{post.description}</em></p>

    <br />

    <slot />

    {nextPost ? <NextPost post={nextPost} /> : null}
  </div>

  <script is:inline src="/src/scripts/copy-code.ts"></script>
  <script>
    import { enableImageZoom } from "@/scripts/zoom.ts";
    enableImageZoom();
  </script>
</BaseLayout>
